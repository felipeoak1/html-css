@charset "UTF-8";

/*
    Paleta de cores
    Verde: #49a09d
    Lilás: #5f2c82
*/

* {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body,
html {
    background-color: #5f2c82;
    height: 100vh;
    width: 100vw;   
}

/* Este main não seria necessário, já que a própria section irá servir como container. 
OBS: É necessário atribuir um height e um width, já que está servindo como position relative para o nosso elemento com position absolute. Caso não seja atribuído valores de largura e altura, o elemento se comportará como o fluxo normal do html e do box model, ou seja, ficará na parte de cima da tela, sem nenhuma largura ou altura.*/
main {
    position: relative;
    height: 100vh;
    width: 100vw;
}

/* Overflow nesta section está sendo utilizando para cortar tudo aquilo que ultrapassa o limite do container.
OBS: Todas as transições e animações devem ser declaradas sempre como as últimas propriedades. */
section#login {
    position: absolute;
    top: 50%;
    left: 50%;
    overflow: hidden;
    
    background-color: white;
    width: 250px;
    height: 515px;
    border-radius: 20px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.450);
    
    transform: translate(-50%, -50%);
    transition: width .3s, height .3s;
    transition-timing-function: ease;
}

section#login > div#imagem {
    display: block;
    background: #5f2c82 url("../imagens/pexels-sagui-andrea-618833.jpg") no-repeat;
    background-size: cover;
    background-position: left bottom;
    height: 200px;
}

section#login > div#formulario {
    display: block;
    padding: 10px;
}

div#formulario > h1 {
    text-align: center;
    margin-bottom: 10px;
}

div#formulario > p {
    font-size: 0.8em;
}

/* Como a section já possui um tamanho definido e o form está dentro dela, então podemos utilizar medidas responsivas como o '%', que irá limitar o tamanho do form para o tamanho máximo do container em que ele está. 
OBS: Lembrando que o height pode ser um valor estático, já que para tamanhos de telas maiores ou menores a altura se manterá a mesma. */
form > div.campo {
    display: block;
    background-color: #5f2c82;
    width: 100%;
    height: 40px;
    border-radius: 8px;
    border: 2px solid #5f2c82;
    margin: 5px 0px;
}

label {
    font-size: 0.9em;
}

/* Aqui estamos escondendo o nome 'LOGIN' e 'SENHA' para podermos utilizar o espaço em que eles ocupavam, porém para os motores de busca ainda estarão disponíveis. */
div.campo > label {
    display: none;
}

div.campo > i {
    color: white;
    font-size: 2em;
    width: 40px;
    padding: 5px;
}

/* Transform translateY serve para alterarmos a posição do elemento para cima (com valores negativos) ou para baixo.
Também podemos realizar cálculos com o CSS, desta forma podemos atingir valores mais absolutos.*/
div.campo > input {
    background-color: #94cfcd;
    font-size: 1em;
    width: calc(100% - 44.4px);
    height: 100%;
    border: 0px;
    border-radius: 8px;
    padding: 4px;
    transform: translateY(-12px);
}

div.campo > input:focus-within {
    background-color: white;
}

/* A propriedade cursor:pointer permite alterarmos a visualição do nosso mouse*/
form > input[type=submit] {
    display: block;
    font-size: 1em;
    width: 100%;
    height: 40px;
    background-color: #49a09d;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

form > input[type=submit]:hover {
    background-color: #2d6462;
}

form > a.botao {
    display: block;
    text-align: center;
    font-size: 1em;
    width: 100%;
    height: 40px;
    padding-top: 7px;
    margin-top: 5px;
    background-color: white;
    color: #2d6462;
    border: 1px solid #49a09d;
    border-radius: 5px;
    text-decoration: none;
}

form > a.botao:hover {
    background-color: #6cd3cf;
}

form > a.botao > i {
    font-size: 0.8em;
}